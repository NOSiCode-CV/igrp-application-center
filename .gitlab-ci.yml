image: docker:28.2.2
services:
  - name: docker:28.2.2-dind
    command: [ "--tls=false", "--mtu=1240" ]
variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  DOCKER_HOST: tcp://docker:2375
  DOCKER_REGISTRY: registry.nosi.cv
  DOCKER_PROJECT: igrp
  IMAGE_NAME: igrp-application-center
  IMAGE_NAME_FULL: "$DOCKER_REGISTRY/$DOCKER_PROJECT/$IMAGE_NAME"
  IMAGE_TAG: latest
   # Default environment variables (can be overridden per environment)
  NEXT_PUBLIC_BASE_PATH: "$NEXT_PUBLIC_BASE_PATH"
  NEXT_PUBLIC_ALLOWED_DOMAINS: "$NEXT_PUBLIC_ALLOWED_DOMAINS"
  
stages:
  - build
  - manifest
  - deploy

.build-template:
  only:
    - main
  before_script:
    - apk add --no-cache curl bash
    - docker login -u "$DOCKER_REGISTRY_USERNAME" -p "$DOCKER_REGISTRY_PASSWORD" "$DOCKER_REGISTRY"

build-arm64:
  stage: build
  extends: .build-template
  script:
    - docker buildx create --use --name amd64builder
    - docker buildx inspect --bootstrap
    - docker build --build-arg NEXT_PUBLIC_BASE_PATH=$NEXT_PUBLIC_BASE_PATH --build-arg NEXT_PUBLIC_ALLOWED_DOMAINS=$NEXT_PUBLIC_ALLOWED_DOMAINS --platform linux/arm64 -t $IMAGE_NAME_FULL:arm64 --push --output=type=image,name="$IMAGE_NAME_FULL:arm64",push=true .

  tags:
    - arm64
  only:
    - main
   
build-amd64:
  extends: .build-template
  stage: build
  script:
    - docker buildx create --use --name amd64builder
    - docker buildx inspect --bootstrap
    - docker build --build-arg NEXT_PUBLIC_BASE_PATH=$NEXT_PUBLIC_BASE_PATH --build-arg NEXT_PUBLIC_ALLOWED_DOMAINS=$NEXT_PUBLIC_ALLOWED_DOMAINS --platform linux/amd64 -t $IMAGE_NAME_FULL:amd64 --push --output=type=image,name="$IMAGE_NAME_FULL:amd64",push=true .
  
  only:
    - main

create-manifest:
  stage: manifest
  script:
    - docker login -u "$DOCKER_REGISTRY_USERNAME" -p "$DOCKER_REGISTRY_PASSWORD" "$DOCKER_REGISTRY"
    - docker manifest create "$IMAGE_NAME_FULL:$IMAGE_TAG" --amend "$IMAGE_NAME_FULL:amd64" --amend "$IMAGE_NAME_FULL:arm64"
    - docker manifest push $IMAGE_NAME_FULL:$IMAGE_TAG
  needs:
    - build-amd64
    - build-arm64

deploy_dev:
  image: gcc:latest
  stage: deploy
  only:
    - env-dev
  script:
    - |
      curl -u "$DEPLOY_USER_DEV:$DEPLOY_PASSWORD_DEV" \
        -X POST \
        -H 'Accept: application/json' \
        -H 'Content-Type: application/json' \
        'https://manager.nosi.cv/v3/project/c-m-2dwvbm6l:p-ftmmp/workloads/deployment:integration-hub:igrp-application-center?action=redeploy'
